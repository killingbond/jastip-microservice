package com.cus.jastip.transaction.domain;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import javax.validation.constraints.*;

import org.springframework.data.elasticsearch.annotations.Document;
import java.io.Serializable;
import java.time.Instant;
import java.util.HashSet;
import java.util.Set;
import java.util.Objects;

import com.cus.jastip.transaction.domain.enumeration.TripStatus;

/**
 * A Trip.
 */
@Entity
@Table(name = "trip")
@Document(indexName = "trip")
public class Trip extends AbstractAuditingEntity  implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "posting_date")
    private Instant postingDate;

    /**
     * generated by system
     */
    @NotNull
    @ApiModelProperty(value = "generated by system", required = true)
    @Column(name = "owner_id", nullable = false)
    private Long ownerId;

    @NotNull
    @Column(name = "timezone", nullable = false)
    private String timezone;

    @NotNull
    @Column(name = "origin_country_id", nullable = false)
    private Long originCountryId;

    @NotNull
    @Column(name = "origin_country_name", nullable = false)
    private String originCountryName;

    @Column(name = "origin_city_id")
    private Long originCityId;

    @Column(name = "origin_city_name")
    private String originCityName;

    @NotNull
    @Column(name = "dest_country_id", nullable = false)
    private Long destCountryId;

    @NotNull
    @Column(name = "dest_country_name", nullable = false)
    private String destCountryName;

    @Column(name = "dest_city_id")
    private Long destCityId;

    @Column(name = "dest_city_name")
    private String destCityName;

    @NotNull
    @Column(name = "start_date", nullable = false)
    private Instant startDate;

    @NotNull
    @Column(name = "end_date", nullable = false)
    private Instant endDate;

    @Min(value = 0)
    @Column(name = "post_count")
    private Integer postCount;

    @Enumerated(EnumType.STRING)
    @Column(name = "status")
    private TripStatus status;

    @OneToMany(mappedBy = "trip")
    @JsonIgnore
    private Set<Posting> postings = new HashSet<>();

    // jhipster-needle-entity-add-field - JHipster will add fields here, do not remove
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Instant getPostingDate() {
        return postingDate;
    }

    public Trip postingDate(Instant postingDate) {
        this.postingDate = postingDate;
        return this;
    }

    public void setPostingDate(Instant postingDate) {
        this.postingDate = postingDate;
    }

    public Long getOwnerId() {
        return ownerId;
    }

    public Trip ownerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }

    public void setOwnerId(Long ownerId) {
        this.ownerId = ownerId;
    }

    public String getTimezone() {
        return timezone;
    }

    public Trip timezone(String timezone) {
        this.timezone = timezone;
        return this;
    }

    public void setTimezone(String timezone) {
        this.timezone = timezone;
    }

    public Long getOriginCountryId() {
        return originCountryId;
    }

    public Trip originCountryId(Long originCountryId) {
        this.originCountryId = originCountryId;
        return this;
    }

    public void setOriginCountryId(Long originCountryId) {
        this.originCountryId = originCountryId;
    }

    public String getOriginCountryName() {
        return originCountryName;
    }

    public Trip originCountryName(String originCountryName) {
        this.originCountryName = originCountryName;
        return this;
    }

    public void setOriginCountryName(String originCountryName) {
        this.originCountryName = originCountryName;
    }

    public Long getOriginCityId() {
        return originCityId;
    }

    public Trip originCityId(Long originCityId) {
        this.originCityId = originCityId;
        return this;
    }

    public void setOriginCityId(Long originCityId) {
        this.originCityId = originCityId;
    }

    public String getOriginCityName() {
        return originCityName;
    }

    public Trip originCityName(String originCityName) {
        this.originCityName = originCityName;
        return this;
    }

    public void setOriginCityName(String originCityName) {
        this.originCityName = originCityName;
    }

    public Long getDestCountryId() {
        return destCountryId;
    }

    public Trip destCountryId(Long destCountryId) {
        this.destCountryId = destCountryId;
        return this;
    }

    public void setDestCountryId(Long destCountryId) {
        this.destCountryId = destCountryId;
    }

    public String getDestCountryName() {
        return destCountryName;
    }

    public Trip destCountryName(String destCountryName) {
        this.destCountryName = destCountryName;
        return this;
    }

    public void setDestCountryName(String destCountryName) {
        this.destCountryName = destCountryName;
    }

    public Long getDestCityId() {
        return destCityId;
    }

    public Trip destCityId(Long destCityId) {
        this.destCityId = destCityId;
        return this;
    }

    public void setDestCityId(Long destCityId) {
        this.destCityId = destCityId;
    }

    public String getDestCityName() {
        return destCityName;
    }

    public Trip destCityName(String destCityName) {
        this.destCityName = destCityName;
        return this;
    }

    public void setDestCityName(String destCityName) {
        this.destCityName = destCityName;
    }

    public Instant getStartDate() {
        return startDate;
    }

    public Trip startDate(Instant startDate) {
        this.startDate = startDate;
        return this;
    }

    public void setStartDate(Instant startDate) {
        this.startDate = startDate;
    }

    public Instant getEndDate() {
        return endDate;
    }

    public Trip endDate(Instant endDate) {
        this.endDate = endDate;
        return this;
    }

    public void setEndDate(Instant endDate) {
        this.endDate = endDate;
    }

    public Integer getPostCount() {
        return postCount;
    }

    public Trip postCount(Integer postCount) {
        this.postCount = postCount;
        return this;
    }

    public void setPostCount(Integer postCount) {
        this.postCount = postCount;
    }

    public TripStatus getStatus() {
        return status;
    }

    public Trip status(TripStatus status) {
        this.status = status;
        return this;
    }

    public void setStatus(TripStatus status) {
        this.status = status;
    }

    public Set<Posting> getPostings() {
        return postings;
    }

    public Trip postings(Set<Posting> postings) {
        this.postings = postings;
        return this;
    }

    public Trip addPosting(Posting posting) {
        this.postings.add(posting);
        posting.setTrip(this);
        return this;
    }

    public Trip removePosting(Posting posting) {
        this.postings.remove(posting);
        posting.setTrip(null);
        return this;
    }

    public void setPostings(Set<Posting> postings) {
        this.postings = postings;
    }
    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here, do not remove

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Trip trip = (Trip) o;
        if (trip.getId() == null || getId() == null) {
            return false;
        }
        return Objects.equals(getId(), trip.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(getId());
    }

    @Override
    public String toString() {
        return "Trip{" +
            "id=" + getId() +
            ", postingDate='" + getPostingDate() + "'" +
            ", ownerId=" + getOwnerId() +
            ", timezone='" + getTimezone() + "'" +
            ", originCountryId=" + getOriginCountryId() +
            ", originCountryName='" + getOriginCountryName() + "'" +
            ", originCityId=" + getOriginCityId() +
            ", originCityName='" + getOriginCityName() + "'" +
            ", destCountryId=" + getDestCountryId() +
            ", destCountryName='" + getDestCountryName() + "'" +
            ", destCityId=" + getDestCityId() +
            ", destCityName='" + getDestCityName() + "'" +
            ", startDate='" + getStartDate() + "'" +
            ", endDate='" + getEndDate() + "'" +
            ", postCount=" + getPostCount() +
            ", status='" + getStatus() + "'" +
            "}";
    }
}
